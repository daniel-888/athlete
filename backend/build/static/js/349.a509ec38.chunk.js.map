{"version":3,"file":"static/js/349.a509ec38.chunk.js","mappings":"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","sources":["ui-component/cards/AuthFooter.js","ui-component/extended/AnimateButton.js","ui-component/cards/MainCard.js","views/authentication/AuthCardWrapper.js","views/authentication/AuthWrapper.js","utils/password-strength.js","views/authentication/AuthRegister.js","views/authentication/Register.js"],"sourcesContent":["// material-ui\nimport { Link, Typography, Stack } from '@mui/material';\n\n// ==============================|| FOOTER - AUTHENTICATION 2 & 3 ||============================== //\n\nconst AuthFooter = () => (\n    <Stack direction=\"row\" justifyContent=\"space-between\">\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://berrydashboard.io\" target=\"_blank\" underline=\"hover\">\n            berrydashboard.io\n        </Typography>\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://codedthemes.com\" target=\"_blank\" underline=\"hover\">\n            &copy; codedthemes.com\n        </Typography>\n    </Stack>\n);\n\nexport default AuthFooter;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// third-party\nimport { motion, useCycle } from 'framer-motion';\n\n// ==============================|| ANIMATION BUTTON ||============================== //\n\nconst AnimateButton = React.forwardRef(({ children, type, direction, offset, scale }, ref) => {\n    let offset1;\n    let offset2;\n    switch (direction) {\n        case 'up':\n        case 'left':\n            offset1 = offset;\n            offset2 = 0;\n            break;\n        case 'right':\n        case 'down':\n        default:\n            offset1 = 0;\n            offset2 = offset;\n            break;\n    }\n\n    const [x, cycleX] = useCycle(offset1, offset2);\n    const [y, cycleY] = useCycle(offset1, offset2);\n\n    switch (type) {\n        case 'rotate':\n            return (\n                <motion.div\n                    ref={ref}\n                    animate={{ rotate: 360 }}\n                    transition={{\n                        repeat: Infinity,\n                        repeatType: 'loop',\n                        duration: 2,\n                        repeatDelay: 0\n                    }}\n                >\n                    {children}\n                </motion.div>\n            );\n        case 'slide':\n            if (direction === 'up' || direction === 'down') {\n                return (\n                    <motion.div\n                        ref={ref}\n                        animate={{ y: y !== undefined ? y : '' }}\n                        onHoverEnd={() => cycleY()}\n                        onHoverStart={() => cycleY()}\n                    >\n                        {children}\n                    </motion.div>\n                );\n            }\n            return (\n                <motion.div ref={ref} animate={{ x: x !== undefined ? x : '' }} onHoverEnd={() => cycleX()} onHoverStart={() => cycleX()}>\n                    {children}\n                </motion.div>\n            );\n\n        case 'scale':\n        default:\n            if (typeof scale === 'number') {\n                scale = {\n                    hover: scale,\n                    tap: scale\n                };\n            }\n            return (\n                <motion.div ref={ref} whileHover={{ scale: scale?.hover }} whileTap={{ scale: scale?.tap }}>\n                    {children}\n                </motion.div>\n            );\n    }\n});\n\nAnimateButton.propTypes = {\n    children: PropTypes.node,\n    offset: PropTypes.number,\n    type: PropTypes.oneOf(['slide', 'scale', 'rotate']),\n    direction: PropTypes.oneOf(['up', 'down', 'left', 'right']),\n    scale: PropTypes.oneOfType([PropTypes.number, PropTypes.object])\n};\n\nAnimateButton.defaultProps = {\n    type: 'scale',\n    offset: 10,\n    direction: 'right',\n    scale: {\n        hover: 1,\n        tap: 0.9\n    }\n};\n\nexport default AnimateButton;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\n\n// constant\nconst headerSX = {\n    '& .MuiCardHeader-action': { mr: 0 }\n};\n\n// ==============================|| CUSTOM MAIN CARD ||============================== //\n\nconst MainCard = React.forwardRef(\n    (\n        {\n            border = true,\n            boxShadow,\n            children,\n            content = true,\n            contentClass = '',\n            contentSX = {},\n            darkTitle,\n            secondary,\n            shadow,\n            sx = {},\n            title,\n            ...others\n        },\n        ref\n    ) => {\n        const theme = useTheme();\n\n        return (\n            <Card\n                ref={ref}\n                {...others}\n                sx={{\n                    border: border ? '1px solid' : 'none',\n                    borderColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary[200] + 75,\n                    ':hover': {\n                        boxShadow: boxShadow\n                            ? shadow ||\n                              (theme.palette.mode === 'dark' ? '0 2px 14px 0 rgb(33 150 243 / 10%)' : '0 2px 14px 0 rgb(32 40 45 / 8%)')\n                            : 'inherit'\n                    },\n                    ...sx\n                }}\n            >\n                {/* card header and action */}\n                {!darkTitle && title && <CardHeader sx={headerSX} title={title} action={secondary} />}\n                {darkTitle && title && (\n                    <CardHeader sx={headerSX} title={<Typography variant=\"h3\">{title}</Typography>} action={secondary} />\n                )}\n\n                {/* content & header divider */}\n                {title && <Divider />}\n\n                {/* card content */}\n                {content && (\n                    <CardContent sx={contentSX} className={contentClass}>\n                        {children}\n                    </CardContent>\n                )}\n                {!content && children}\n            </Card>\n        );\n    }\n);\n\nMainCard.propTypes = {\n    border: PropTypes.bool,\n    boxShadow: PropTypes.bool,\n    children: PropTypes.node,\n    content: PropTypes.bool,\n    contentClass: PropTypes.string,\n    contentSX: PropTypes.object,\n    darkTitle: PropTypes.bool,\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\n    shadow: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    sx: PropTypes.object,\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\n};\n\nexport default MainCard;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { Box } from '@mui/material';\n\n// project import\nimport MainCard from 'ui-component/cards/MainCard';\n\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\n\nconst AuthCardWrapper = ({ children, ...other }) => (\n    <MainCard\n        sx={{\n            maxWidth: { xs: 400, lg: 475 },\n            margin: { xs: 2.5, md: 3 },\n            '& > *': {\n                flexGrow: 1,\n                flexBasis: '50%'\n            }\n        }}\n        content={false}\n        {...other}\n    >\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\n    </MainCard>\n);\n\nAuthCardWrapper.propTypes = {\n    children: PropTypes.node\n};\n\nexport default AuthCardWrapper;\n","// material-ui\nimport { styled } from '@mui/material/styles';\n\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\n\nconst AuthWrapper = styled('div')(({ theme }) => ({\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary.light,\n    minHeight: '100vh'\n}));\n\nexport default AuthWrapper;\n","/**\n * Password validator for login pages\n */\nimport value from 'assets/scss/_themes-vars.module.scss';\n\n// has number\nconst hasNumber = (number) => new RegExp(/[0-9]/).test(number);\n\n// has mix of small and capitals\nconst hasMixed = (number) => new RegExp(/[a-z]/).test(number) && new RegExp(/[A-Z]/).test(number);\n\n// has special chars\nconst hasSpecial = (number) => new RegExp(/[!#@$%^&*)(+=._-]/).test(number);\n\n// set color based on password strength\nexport const strengthColor = (count) => {\n    if (count < 2) return { label: 'Poor', color: value.errorMain };\n    if (count < 3) return { label: 'Weak', color: value.warningDark };\n    if (count < 4) return { label: 'Normal', color: value.orangeMain };\n    if (count < 5) return { label: 'Good', color: value.successMain };\n    if (count < 6) return { label: 'Strong', color: value.successDark };\n    return { label: 'Poor', color: value.errorMain };\n};\n\n// password strength indicator\nexport const strengthIndicatorNumFunc = (number) => {\n    let strengths = 0;\n    if (number.length > 5) strengths += 1;\n    if (number.length > 7) strengths += 1;\n    if (hasNumber(number)) strengths += 1;\n    if (hasSpecial(number)) strengths += 1;\n    if (hasMixed(number)) strengths += 1;\n    return strengths;\n};\n","import React, { useEffect } from 'react';\nimport {Link, useNavigate} from 'react-router-dom';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport {\n    Box,\n    Button,\n    Checkbox,\n    FormControl,\n    FormControlLabel,\n    FormHelperText,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    OutlinedInput,\n    TextField,\n    Typography,\n    useMediaQuery\n} from '@mui/material';\n\n// third party\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n\n// project imports\nimport useAuth from 'hooks/useAuth';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport { strengthColor, strengthIndicatorNumFunc } from 'utils/password-strength';\n\n// assets\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport { useDispatch } from 'store';\nimport { openSnackbar } from 'store/slices/snackbar';\n\n// ===========================|| AUTH - REGISTER ||=========================== //\n\nconst AuthRegister = ({ ...others }) => {\n    const theme = useTheme();\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n    const [showPassword, setShowPassword] = React.useState(false);\n    const [checked, setChecked] = React.useState(true);\n\n    const [strength, setStrength] = React.useState(0);\n    const [level, setLevel] = React.useState();\n    const { register } = useAuth();\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const changePassword = (value) => {\n        const temp = strengthIndicatorNumFunc(value);\n        setStrength(temp);\n        setLevel(strengthColor(temp));\n    };\n\n    useEffect(() => {\n        changePassword('');\n    }, []);\n\n    return (\n        <>\n            <Formik\n                initialValues={{\n                    firstName: '',\n                    lastName: '',\n                    username: '',\n                    password: '',\n                    password2: '',\n                    submit: null\n                }}\n                validationSchema={Yup.object().shape({\n                    firstName: Yup.string().required('First Name is required'),\n                    lastName: Yup.string().required('Last Name is required'),\n                    username: Yup.string().required('Username is required'),\n                    password: Yup.string().max(255).required('Password is required'),\n                    password2: Yup.string().max(255).required('Confirm password is required'),\n                })}\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n                    try {\n                        const result = await register(values.password, values.password2, values.firstName, values.lastName, values.username);\n                        if(result.success) {\n                            dispatch(\n                              openSnackbar({\n                                  open: true,\n                                  message: result.message,\n                                  variant: 'alert',\n                                  alert: {\n                                      color: 'success'\n                                  },\n                                  close: false\n                              })\n                            )\n                            navigate('/login', { replace: true });\n                        }\n                    } catch (err) {\n                        // if (scriptedRef.current) {\n                            setStatus({ success: false });\n                            setErrors(err);\n                            setSubmitting(false);\n                        // }\n                    }\n                }}\n            >\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                    <form noValidate onSubmit={handleSubmit} {...others}>\n                        <Grid container spacing={matchDownSM ? 0 : 2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    fullWidth\n                                    label=\"First Name\"\n                                    margin=\"normal\"\n                                    name=\"firstName\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    type=\"text\"\n                                    value={values.firstName}\n                                    sx={{ ...theme.typography.customInput }}\n                                />\n                                {touched.firstName && errors.firstName && (\n                                  <FormHelperText error id=\"standard-weight-helper-text--register\">\n                                      {errors.firstName}\n                                  </FormHelperText>\n                                )}\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                  fullWidth\n                                  label=\"Last Name\"\n                                  margin=\"normal\"\n                                  name=\"lastName\"\n                                  onBlur={handleBlur}\n                                  onChange={handleChange}\n                                  type=\"text\"\n                                  value={values.lastName}\n                                  sx={{ ...theme.typography.customInput }}\n                                />\n                                {touched.lastName && errors.lastName && (\n                                  <FormHelperText error id=\"standard-weight-helper-text--register\">\n                                      {errors.lastName}\n                                  </FormHelperText>\n                                )}\n                            </Grid>\n                        </Grid>\n\n                        <FormControl fullWidth error={Boolean(touched.username && errors.username)} sx={{ ...theme.typography.customInput }}>\n                            <InputLabel htmlFor=\"outlined-adornment-username-register\">Username</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-username-register\"\n                                type=\"text\"\n                                value={values.username}\n                                name=\"username\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                inputProps={{}}\n                            />\n                            {touched.username && errors.username && (\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\n                                    {errors.username}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.password && errors.password)}\n                            sx={{ ...theme.typography.customInput }}\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-password-register\">Password</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password-register\"\n                                type={showPassword ? 'text' : 'password'}\n                                value={values.password}\n                                name=\"password\"\n                                label=\"Password\"\n                                onBlur={handleBlur}\n                                onChange={(e) => {\n                                    handleChange(e);\n                                    changePassword(e.target.value);\n                                }}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                            size=\"large\"\n                                        >\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                inputProps={{}}\n                            />\n                            {touched.password && errors.password && (\n                                <FormHelperText error id=\"standard-weight-helper-text-password-register\">\n                                    {errors.password}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.password2 && errors.password2)}\n                            sx={{ ...theme.typography.customInput }}\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-password-register\">Password confirmation</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password2-register\"\n                                type={showPassword ? 'text' : 'password'}\n                                value={values.password2}\n                                name=\"password2\"\n                                label=\"Password confirmation\"\n                                onBlur={handleBlur}\n                                onChange={(e) => {\n                                    handleChange(e);\n                                    changePassword(e.target.value);\n                                }}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                            size=\"large\"\n                                        >\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                inputProps={{}}\n                            />\n                            {touched.password2 && errors.password2 && (\n                                <FormHelperText error id=\"standard-weight-helper-text-password2-register\">\n                                    {errors.password2}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        {strength !== 0 && (\n                            <FormControl fullWidth>\n                                <Box sx={{ mb: 2 }}>\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid item>\n                                            <Box\n                                                style={{ backgroundColor: level?.color }}\n                                                sx={{ width: 85, height: 8, borderRadius: '7px' }}\n                                            />\n                                        </Grid>\n                                        <Grid item>\n                                            <Typography variant=\"subtitle1\" fontSize=\"0.75rem\">\n                                                {level?.label}\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Box>\n                            </FormControl>\n                        )}\n\n                        {errors.submit && (\n                            <Box sx={{ mt: 3 }}>\n                                <FormHelperText error>{errors.submit}</FormHelperText>\n                            </Box>\n                        )}\n\n                        <Box sx={{ mt: 2 }}>\n                            <AnimateButton>\n                                <Button\n                                    disableElevation\n                                    disabled={isSubmitting}\n                                    fullWidth\n                                    size=\"large\"\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                >\n                                    Sign up\n                                </Button>\n                            </AnimateButton>\n                        </Box>\n                    </form>\n                )}\n            </Formik>\n        </>\n    );\n};\n\nexport default AuthRegister;\n","import { Link } from 'react-router-dom';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@mui/material';\n\n// project imports\nimport AuthWrapper from './AuthWrapper';\nimport AuthCardWrapper from './AuthCardWrapper';\nimport Logo from 'ui-component/Logo';\nimport AuthRegister from './AuthRegister';\nimport AuthFooter from 'ui-component/cards/AuthFooter';\nimport useAuth from 'hooks/useAuth';\n\n// assets\n\n// ===============================|| AUTH3 - REGISTER ||=============================== //\n\nconst Register = () => {\n    const theme = useTheme();\n    const { isLoggedIn } = useAuth();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n\n    return (\n        <AuthWrapper>\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\n                <Grid item xs={12}>\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n                            <AuthCardWrapper>\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                                    <Grid item sx={{ mb: 3 }}>\n                                        <Link to=\"/\">\n                                            <Logo />\n                                        </Link>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid\n                                            container\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\n                                            alignItems=\"center\"\n                                            justifyContent=\"center\"\n                                        >\n                                            <Grid item>\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                                                    <Typography\n                                                        color={theme.palette.secondary.main}\n                                                        gutterBottom\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\n                                                    >\n                                                        Sign up\n                                                    </Typography>\n                                                    <Typography\n                                                        variant=\"caption\"\n                                                        fontSize=\"16px\"\n                                                        textAlign={matchDownSM ? 'center' : 'inherit'}\n                                                    >\n                                                        Enter your credentials to continue\n                                                    </Typography>\n                                                </Stack>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <AuthRegister />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Divider />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                                            <Typography\n                                                component={Link}\n                                                to={isLoggedIn ? '/pages/login/login3' : '/login'}\n                                                variant=\"subtitle1\"\n                                                sx={{ textDecoration: 'none' }}\n                                            >\n                                                Already have an account?\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </AuthCardWrapper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\n                    <AuthFooter />\n                </Grid>\n            </Grid>\n        </AuthWrapper>\n    );\n};\n\nexport default Register;\n"],"names":["direction","justifyContent","variant","component","Link","href","target","underline","AnimateButton","React","ref","offset1","offset2","children","type","offset","scale","useCycle","x","cycleX","y","cycleY","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","undefined","onHoverEnd","onHoverStart","hover","tap","whileHover","whileTap","defaultProps","headerSX","mr","border","boxShadow","content","contentClass","contentSX","darkTitle","secondary","shadow","sx","title","others","theme","useTheme","Card","borderColor","palette","mode","background","default","primary","CardHeader","action","Typography","Divider","CardContent","className","other","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","Box","p","sm","xl","AuthWrapper","styled","backgroundColor","light","minHeight","strengthIndicatorNumFunc","number","strengths","length","RegExp","test","hasNumber","hasSpecial","hasMixed","dispatch","useDispatch","navigate","useNavigate","matchDownSM","useMediaQuery","breakpoints","down","showPassword","setShowPassword","strength","setStrength","level","setLevel","register","useAuth","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","changePassword","value","count","temp","label","color","useEffect","initialValues","firstName","lastName","username","password","password2","submit","validationSchema","Yup","shape","required","max","onSubmit","values","setErrors","setStatus","setSubmitting","result","success","openSnackbar","open","message","alert","close","replace","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","Grid","container","spacing","item","TextField","fullWidth","name","onBlur","onChange","typography","customInput","FormHelperText","error","id","FormControl","Boolean","InputLabel","htmlFor","OutlinedInput","inputProps","e","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","size","Visibility","VisibilityOff","mb","alignItems","style","width","height","borderRadius","fontSize","mt","Button","disableElevation","disabled","isLoggedIn","m","AuthCardWrapper","to","Logo","Stack","main","gutterBottom","textAlign","textDecoration","AuthFooter"],"sourceRoot":""}